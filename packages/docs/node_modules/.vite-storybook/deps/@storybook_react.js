import {
  render,
  renderToDOM
} from "./chunk-E4OSGMHX.js";
import "./chunk-IAJVP4OK.js";
import {
  PreviewWeb
} from "./chunk-YYDDCRTE.js";
import "./chunk-SUNTMLZ3.js";
import "./chunk-WBRGECGN.js";
import "./chunk-6KCFRSK2.js";
import "./chunk-XSK3I75D.js";
import "./chunk-XS3ZEPN6.js";
import "./chunk-5U7BJ3D4.js";
import "./chunk-OYMDD5DX.js";
import {
  createChannel
} from "./chunk-BNCNEZCZ.js";
import "./chunk-GCMQOSUD.js";
import "./chunk-4UO7D677.js";
import "./chunk-M7KF7D6K.js";
import "./chunk-QPLOGG6Q.js";
import {
  ClientApi
} from "./chunk-E52KZ5ZU.js";
import {
  composeStories,
  composeStory,
  setProjectAnnotations
} from "./chunk-4HX6OVSZ.js";
import "./chunk-YRXIY6HE.js";
import "./chunk-3C22KPKU.js";
import "./chunk-LRQ5IWJX.js";
import "./chunk-WOA5BE5Q.js";
import "./chunk-6DG7PEHX.js";
import "./chunk-B7P3GRF6.js";
import "./chunk-7UA5FIRX.js";
import "./chunk-PB5NDXYG.js";
import "./chunk-4LAGR6VO.js";
import "./chunk-XQOPFYNJ.js";
import "./chunk-SEY5HXXL.js";
import "./chunk-3QAHKC62.js";
import "./chunk-2QTPEREA.js";
import "./chunk-VIPQIB44.js";
import "./chunk-6SPLJA5R.js";
import "./chunk-ZSF4OPEM.js";
import "./chunk-4LOXG5HZ.js";
import "./chunk-RCAFVGW3.js";
import "./chunk-2SM7A4PQ.js";
import "./chunk-W5VIKAC5.js";
import "./chunk-H32V5KIO.js";
import "./chunk-CJPUPBO3.js";
import "./chunk-YILK6MDZ.js";
import "./chunk-3TPYYIGO.js";
import "./chunk-VK73QKD6.js";
import "./chunk-NIJPRW6G.js";
import "./chunk-UMWVCJJW.js";
import "./chunk-E3JZOUSM.js";
import {
  require_dist
} from "./chunk-WMZ2TOKJ.js";
import "./chunk-SXFLNXVX.js";
import "./chunk-G4G225G7.js";
import "./chunk-ZYKZK7DK.js";
import "./chunk-3WLHD3Y2.js";
import "./chunk-HSGGWLNP.js";
import "./chunk-WSDZJAUT.js";
import "./chunk-DNEXKNCO.js";
import {
  addons,
  init_public_api
} from "./chunk-S2VMFDWL.js";
import "./chunk-KH4R5VUR.js";
import "./chunk-OJUK7ZMG.js";
import "./chunk-BTVW5343.js";
import "./chunk-TLHF3CC2.js";
import "./chunk-7JBTHVYH.js";
import "./chunk-A5XBEESS.js";
import "./chunk-DTGD5FIJ.js";
import "./chunk-JL4KYXLO.js";
import {
  esm_default,
  init_esm as init_esm2
} from "./chunk-QPQOIBEH.js";
import "./chunk-IH54RBWX.js";
import {
  init_es_array_from,
  init_es_array_map,
  init_es_function_name,
  init_es_object_assign
} from "./chunk-PHZXTOJI.js";
import {
  init_es_symbol,
  init_es_symbol_description,
  init_es_symbol_iterator
} from "./chunk-EFMSFX4H.js";
import "./chunk-KJVWR6UQ.js";
import "./chunk-JKXT4XXP.js";
import "./chunk-XDPD5MQI.js";
import "./chunk-QM26BOSU.js";
import "./chunk-NNERWACI.js";
import "./chunk-Y3MWMGUY.js";
import "./chunk-DPP4NJUX.js";
import "./chunk-DCMIIV5R.js";
import "./chunk-3KZXGAFX.js";
import "./chunk-CNWJLUKC.js";
import "./chunk-A6ZGP4BD.js";
import "./chunk-KXDXTYII.js";
import "./chunk-RNM52WSY.js";
import "./chunk-AJSSKUKK.js";
import "./chunk-DX7WPYQD.js";
import {
  init_es_array_filter
} from "./chunk-GVPBETUE.js";
import {
  init_es_array_slice,
  init_es_regexp_to_string,
  init_web_dom_collections_for_each
} from "./chunk-YWH6KU77.js";
import "./chunk-5JNM7L57.js";
import "./chunk-FGDLH422.js";
import "./chunk-UOUTG47P.js";
import "./chunk-7IX35PRV.js";
import {
  require_browser
} from "./chunk-EU3NVPBZ.js";
import {
  init_esm,
  logger,
  once,
  require_es_regexp_exec
} from "./chunk-VTHUVTMF.js";
import {
  init_es_array_concat,
  init_web_dom_collections_iterator,
  require_es_array_iterator,
  require_es_string_iterator
} from "./chunk-2VG6SCKD.js";
import {
  init_es_object_to_string
} from "./chunk-E525BUHH.js";
import {
  require_window
} from "./chunk-IPOUH34V.js";
import {
  __toESM
} from "./chunk-S5KM4IGW.js";

// ../../node_modules/@storybook/react/dist/esm/client/preview/index.js
init_es_array_concat();

// ../../node_modules/@storybook/react/node_modules/@storybook/core-client/dist/esm/preview/index.js
var import_csf = __toESM(require_dist());

// ../../node_modules/@storybook/react/node_modules/@storybook/core-client/dist/esm/preview/start.js
init_es_object_to_string();
init_web_dom_collections_for_each();
init_es_array_from();
var import_es_string_iterator2 = __toESM(require_es_string_iterator());
var import_es_array_iterator2 = __toESM(require_es_array_iterator());
init_web_dom_collections_iterator();
init_es_object_assign();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
init_es_array_slice();
init_es_function_name();
var import_es_regexp_exec2 = __toESM(require_es_regexp_exec());
var import_global = __toESM(require_window());
var import_util_deprecate = __toESM(require_browser());
init_public_api();
init_esm2();

// ../../node_modules/@storybook/react/node_modules/@storybook/core-client/dist/esm/preview/executeLoadable.js
var import_es_array_iterator = __toESM(require_es_array_iterator());
init_es_object_to_string();
init_web_dom_collections_iterator();
var import_es_string_iterator = __toESM(require_es_string_iterator());
init_web_dom_collections_for_each();
init_es_array_concat();
init_es_regexp_to_string();
init_es_array_map();
init_es_array_filter();
init_es_array_from();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
init_es_array_slice();
init_es_function_name();
var import_es_regexp_exec = __toESM(require_es_regexp_exec());
init_esm();
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function executeLoadable(loadable) {
  var reqs = null;
  if (Array.isArray(loadable)) {
    reqs = loadable;
  } else if (loadable.keys) {
    reqs = [loadable];
  }
  var exportsMap = /* @__PURE__ */ new Map();
  if (reqs) {
    reqs.forEach(function(req) {
      req.keys().forEach(function(filename) {
        try {
          var fileExports = req(filename);
          exportsMap.set(typeof req.resolve === "function" ? req.resolve(filename) : filename, fileExports);
        } catch (error) {
          var errorString = error.message && error.stack ? "".concat(error.message, "\n ").concat(error.stack) : error.toString();
          logger.error("Unexpected error while loading ".concat(filename, ": ").concat(errorString));
        }
      });
    });
  } else {
    var exported = loadable();
    if (Array.isArray(exported) && exported.every(function(obj) {
      return obj.default != null;
    })) {
      exportsMap = new Map(exported.map(function(fileExports, index) {
        return ["exports-map-".concat(index), fileExports];
      }));
    } else if (exported) {
      logger.warn("Loader function passed to 'configure' should return void or an array of module exports that all contain a 'default' export. Received: ".concat(JSON.stringify(exported)));
    }
  }
  return exportsMap;
}
function executeLoadableForChanges(loadable, m) {
  var _m$hot, _m$hot$data, _m$hot2;
  var lastExportsMap = (m === null || m === void 0 ? void 0 : (_m$hot = m.hot) === null || _m$hot === void 0 ? void 0 : (_m$hot$data = _m$hot.data) === null || _m$hot$data === void 0 ? void 0 : _m$hot$data.lastExportsMap) || /* @__PURE__ */ new Map();
  if (m !== null && m !== void 0 && (_m$hot2 = m.hot) !== null && _m$hot2 !== void 0 && _m$hot2.dispose) {
    m.hot.accept();
    m.hot.dispose(function(data) {
      data.lastExportsMap = lastExportsMap;
    });
  }
  var exportsMap = executeLoadable(loadable);
  var added = /* @__PURE__ */ new Map();
  Array.from(exportsMap.entries()).filter(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), fileExports = _ref2[1];
    return !!fileExports.default;
  }).filter(function(_ref3) {
    var _ref4 = _slicedToArray(_ref3, 2), fileName = _ref4[0], fileExports = _ref4[1];
    return lastExportsMap.get(fileName) !== fileExports;
  }).forEach(function(_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2), fileName = _ref6[0], fileExports = _ref6[1];
    return added.set(fileName, fileExports);
  });
  var removed = /* @__PURE__ */ new Map();
  Array.from(lastExportsMap.keys()).filter(function(fileName) {
    return !exportsMap.has(fileName);
  }).forEach(function(fileName) {
    return removed.set(fileName, lastExportsMap.get(fileName));
  });
  lastExportsMap = exportsMap;
  return {
    added,
    removed
  };
}

// ../../node_modules/@storybook/react/node_modules/@storybook/core-client/dist/esm/preview/start.js
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
var globalWindow = import_global.default.window;
var FEATURES = import_global.default.FEATURES;
var configureDeprecationWarning = (0, import_util_deprecate.default)(function() {
}, "`configure()` is deprecated and will be removed in Storybook 7.0. \nPlease use the `stories` field of `main.js` to load stories.\nRead more at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#deprecated-configure");
var removedApi = function removedApi2(name) {
  return function() {
    throw new Error("@storybook/client-api:".concat(name, " was removed in storyStoreV7."));
  };
};
function start(renderToDOM2) {
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, decorateStory = _ref.decorateStory, render2 = _ref.render;
  if (globalWindow) {
    globalWindow.IS_STORYBOOK = true;
  }
  if (FEATURES !== null && FEATURES !== void 0 && FEATURES.storyStoreV7) {
    return {
      forceReRender: removedApi("forceReRender"),
      getStorybook: removedApi("getStorybook"),
      configure: removedApi("configure"),
      clientApi: {
        addDecorator: removedApi("clientApi.addDecorator"),
        addParameters: removedApi("clientApi.addParameters"),
        clearDecorators: removedApi("clientApi.clearDecorators"),
        addLoader: removedApi("clientApi.addLoader"),
        setAddon: removedApi("clientApi.setAddon"),
        getStorybook: removedApi("clientApi.getStorybook"),
        storiesOf: removedApi("clientApi.storiesOf"),
        raw: removedApi("raw")
      }
    };
  }
  var channel = createChannel({
    page: "preview"
  });
  addons.setChannel(channel);
  var clientApi = new ClientApi();
  var preview = new PreviewWeb();
  var initialized = false;
  var importFn = function importFn2(path) {
    return clientApi.importFn(path);
  };
  function onStoriesChanged() {
    var storyIndex = clientApi.getStoryIndex();
    preview.onStoriesChanged({
      storyIndex,
      importFn
    });
  }
  clientApi.onImportFnChanged = onStoriesChanged;
  clientApi.storyStore = preview.storyStore;
  if (globalWindow) {
    globalWindow.__STORYBOOK_CLIENT_API__ = clientApi;
    globalWindow.__STORYBOOK_ADDONS_CHANNEL__ = channel;
    globalWindow.__STORYBOOK_PREVIEW__ = preview;
    globalWindow.__STORYBOOK_STORY_STORE__ = preview.storyStore;
  }
  return {
    forceReRender: function forceReRender2() {
      return channel.emit(esm_default.FORCE_RE_RENDER);
    },
    getStorybook: function getStorybook2() {
      return [];
    },
    raw: function raw2() {
    },
    clientApi,
    configure: function configure3(framework2, loadable, m) {
      var showDeprecationWarning = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
      if (showDeprecationWarning) {
        configureDeprecationWarning();
      }
      clientApi.addParameters({
        framework: framework2
      });
      var getProjectAnnotations = function getProjectAnnotations2() {
        var _executeLoadableForCh = executeLoadableForChanges(loadable, m), added = _executeLoadableForCh.added, removed = _executeLoadableForCh.removed;
        Array.from(added.entries()).forEach(function(_ref2) {
          var _ref3 = _slicedToArray2(_ref2, 2), fileName = _ref3[0], fileExports = _ref3[1];
          return clientApi.facade.addStoriesFromExports(fileName, fileExports);
        });
        Array.from(removed.entries()).forEach(function(_ref4) {
          var _ref5 = _slicedToArray2(_ref4, 1), fileName = _ref5[0];
          return clientApi.facade.clearFilenameExports(fileName);
        });
        return Object.assign({
          render: render2
        }, clientApi.facade.projectAnnotations, {
          renderToDOM: renderToDOM2,
          applyDecorators: decorateStory
        });
      };
      if (!initialized) {
        preview.initialize({
          getStoryIndex: function getStoryIndex() {
            return clientApi.getStoryIndex();
          },
          importFn,
          getProjectAnnotations
        });
        initialized = true;
      } else {
        getProjectAnnotations();
        onStoriesChanged();
      }
    }
  };
}

// ../../node_modules/@storybook/react/dist/esm/client/preview/globals.js
var import_global2 = __toESM(require_window());
var globalWindow2 = import_global2.default.window;
if (globalWindow2) {
  globalWindow2.STORYBOOK_ENV = "react";
}

// ../../node_modules/@storybook/react/dist/esm/client/preview/index.js
var framework = "react";
var api = start(renderToDOM, {
  render
});
var storiesOf = function storiesOf2(kind, m) {
  return api.clientApi.storiesOf(kind, m).addParameters({
    framework
  });
};
var configure = function configure2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return api.configure.apply(api, [framework].concat(args));
};
var addDecorator = api.clientApi.addDecorator;
var addParameters = api.clientApi.addParameters;
var clearDecorators = api.clientApi.clearDecorators;
var setAddon = api.clientApi.setAddon;
var forceReRender = api.forceReRender;
var getStorybook = api.clientApi.getStorybook;
var raw = api.clientApi.raw;

// ../../node_modules/@storybook/react/dist/esm/client/testing/index.js
init_esm();
function setProjectAnnotations2(projectAnnotations) {
  setProjectAnnotations(projectAnnotations);
}
function setGlobalConfig(projectAnnotations) {
  once.warn("setGlobalConfig is deprecated. Use setProjectAnnotations instead.");
  setProjectAnnotations2(projectAnnotations);
}
var defaultProjectAnnotations = {
  render
};
function composeStory2(story, componentAnnotations, projectAnnotations, exportsName) {
  return composeStory(story, componentAnnotations, projectAnnotations, defaultProjectAnnotations, exportsName);
}
function composeStories2(csfExports, projectAnnotations) {
  var composedStories = composeStories(csfExports, projectAnnotations, composeStory2);
  return composedStories;
}

// ../../node_modules/@storybook/react/dist/esm/client/index.js
if (module && module.hot && module.hot.decline) {
  module.hot.decline();
}
export {
  addDecorator,
  addParameters,
  composeStories2 as composeStories,
  composeStory2 as composeStory,
  configure,
  forceReRender,
  getStorybook,
  raw,
  setAddon,
  setGlobalConfig,
  setProjectAnnotations2 as setProjectAnnotations,
  storiesOf
};
//# sourceMappingURL=@storybook_react.js.map
